# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      DOCKER_ID: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_TK: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKER_TAG: ${GITHUB_SHA::7}
      DOCKER_IMG_NAME: spring-cicd-alpine

    steps:
      - uses: actions/checkout@v3

      - name: Set up Zulu OpenJDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: $DOCKER_ID
          password: $DOCKER_TK

      - name: Docker build
        run: |
          docker build -t $DOCKER_ID/$DOCKER_IMG_NAME:$DOCKER_TAG .
          docker push $DOCKER_ID/$DOCKER_IMG_NAME:$DOCKER_TAG

      - name: Deploy
        uses: appleboy/ssh-action@master

        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            echo docker pull $DOCKER_ID/$DOCKER_IMG_NAME:$DOCKER_TAG
#            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-alpine:${GITHUB_SHA::7}
#            docker stop spring
#            docker run -d --rm --name spring -p 80:8081 ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-alpine:${GITHUB_SHA::7}

#        env:
#          DOCKER_ID: ${{ secrets.DOCKERHUB_USERNAME }}

#          envs: GITHUB_SHA, DOCKER_ID
